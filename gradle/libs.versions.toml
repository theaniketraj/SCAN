[versions]
# Kotlin and Core
kotlin = "1.9.25"
kotlinCoroutines = "1.8.1"
kotlinSerialization = "1.6.3"

# Gradle Plugin Development
gradleApi = "8.8"
gradleTestKit = "8.8"
pluginPublish = "1.2.1"

# YAML Processing
snakeyaml = "2.2"
kaml = "0.61.0"

# JSON Processing
jackson = "2.17.2"
kotlinxJson = "1.6.3"

# Testing Framework
junit = "5.10.3"
kotest = "5.9.1"
mockk = "1.13.12"
assertj = "3.26.3"

# Logging
slf4j = "2.0.13"
logback = "1.5.6"

# Utilities
commons-io = "2.16.1"
commons-codec = "1.17.1"
commons-lang3 = "3.15.0"
guava = "33.2.1-jre"

# HTML Generation
kotlinx-html = "0.11.0"

# File Processing
apache-tika = "2.9.2"

# Configuration Validation
konf = "1.1.2"

# Performance & Profiling
jmh = "1.37"
jmh-gradle-plugin = "0.7.2"

# Code Quality
detekt = "1.23.6"
ktlint = "1.3.1"
spotless = "6.25.0"

# Documentation
dokka = "1.9.20"

[libraries]
# Kotlin Standard Libraries
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

# Kotlin Coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
kotlinx-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinCoroutines" }

# Kotlin Serialization
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinSerialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxJson" }

# Gradle API
gradle-api = { module = "org.gradle:gradle-api", version.ref = "gradleApi" }
gradle-testkit = { module = "org.gradle:gradle-test-kit", version.ref = "gradleTestKit" }

# YAML Processing
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }
kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }

# JSON Processing
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }

# Testing - JUnit 5
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }

# Testing - Kotest
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-framework-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }

# Testing - Mockk
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-jvm = { module = "io.mockk:mockk-jvm", version.ref = "mockk" }

# Testing - AssertJ
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }

# Logging
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }

# Utilities
commons-io = { module = "commons-io:commons-io", version.ref = "commons-io" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commons-codec" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }

# HTML Generation
kotlinx-html = { module = "org.jetbrains.kotlinx:kotlinx-html-jvm", version.ref = "kotlinx-html" }

# File Processing
apache-tika-core = { module = "org.apache.tika:tika-core", version.ref = "apache-tika" }
apache-tika-parsers = { module = "org.apache.tika:tika-parsers-standard-package", version.ref = "apache-tika" }

# Configuration Management
konf-core = { module = "com.uchuhimo:konf-core", version.ref = "konf" }
konf-yaml = { module = "com.uchuhimo:konf-yaml", version.ref = "konf" }

# Performance & Benchmarking
jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmh-generator-annprocess = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }

[bundles]
# Kotlin Core Bundle
kotlin-core = [
    "kotlin-stdlib",
    "kotlin-stdlib-jdk8",
    "kotlin-reflect"
]

# Kotlin Coroutines Bundle
kotlin-coroutines = [
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-jdk8"
]

# Kotlin Serialization Bundle
kotlin-serialization = [
    "kotlinx-serialization-core",
    "kotlinx-serialization-json"
]

# Jackson JSON Bundle
jackson = [
    "jackson-core",
    "jackson-databind",
    "jackson-module-kotlin",
    "jackson-dataformat-yaml"
]

# JUnit 5 Testing Bundle
junit5 = [
    "junit-jupiter",
    "junit-jupiter-api",
    "junit-jupiter-engine",
    "junit-jupiter-params"
]

# Kotest Testing Bundle
kotest = [
    "kotest-runner-junit5",
    "kotest-assertions-core",
    "kotest-property",
    "kotest-framework-datatest"
]

# Mockk Testing Bundle
mockk = [
    "mockk",
    "mockk-jvm"
]

# Logging Bundle
logging = [
    "slf4j-api",
    "logback-classic",
    "logback-core"
]

# Apache Commons Bundle
commons = [
    "commons-io",
    "commons-codec",
    "commons-lang3"
]

# Configuration Management Bundle
config = [
    "konf-core",
    "konf-yaml",
    "kaml"
]

# File Processing Bundle
file-processing = [
    "apache-tika-core",
    "apache-tika-parsers"
]

# Performance Testing Bundle
performance = [
    "jmh-core",
    "jmh-generator-annprocess"
]

# Full Testing Bundle (combines all testing libraries)
testing = [
    "junit-jupiter",
    "junit-jupiter-api",
    "junit-jupiter-engine",
    "junit-jupiter-params",
    "kotest-runner-junit5",
    "kotest-assertions-core",
    "kotest-property",
    "kotest-framework-datatest",
    "mockk",
    "mockk-jvm",
    "assertj-core"
]

[plugins]
# Kotlin Plugins
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

# Gradle Plugin Development
gradle-plugin-publish = { id = "com.gradle.plugin-publish", version.ref = "pluginPublish" }
java-gradle-plugin = { id = "java-gradle-plugin" }

# Documentation
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }

# Code Quality
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }

# Performance
jmh = { id = "me.champeau.jmh", version.ref = "jmh-gradle-plugin" }

# Build Tools
versions = { id = "com.github.ben-manes.versions", version = "0.51.0" }
dependency-analysis = { id = "com.autonomousapps.dependency-analysis", version = "2.1.4" }